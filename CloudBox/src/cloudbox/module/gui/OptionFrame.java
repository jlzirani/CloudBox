/*
 * Copyright (C) 2013 Zirani J.-L.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as 
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package cloudbox.module.gui;

import java.io.File;
import java.util.Properties;
import javax.swing.JDialog;
import javax.swing.BorderFactory;
import javax.swing.JFileChooser;
/**
 *
 * @author Zirani J.-L.
 */
public class OptionFrame extends JDialog {

    private Properties m_properties;
    
    /**
     * Creates new form OptionFrame
     */
    public OptionFrame(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public OptionFrame(Properties f_properties) {
        super();
        initComponents();
        this.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
        setTitle("Option");
        m_properties = f_properties;
    }
    
    public void setProperties() {
        switch(m_properties.getProperty("mode", "client")) {
            case "client" : setClientProp(); break;
            case "server" : setServerProp(); break;
            default: setClientProp();
        }
        
        directoryField.setText(m_properties.getProperty("directory", 
                System.getProperty("user.home")+File.separator+"CloudBox"+
                File.separator));
    }
    
    private void setClientProp() {
        clientMode.setSelected(true);
        setClientPanel();
        hostField.setText(m_properties.getProperty("host", "localhost"));
        portField.setText(m_properties.getProperty("port", "1337"));
    }

    private void setServerProp() {
        serverMode.setSelected(true);
        setServerPanel();
        portField.setText(m_properties.getProperty("port", "1337"));
    }
    
    
    public final void setServerPanel() {
        networkPanel.setBorder(BorderFactory.createTitledBorder("Server")); 
        hostField.setEnabled(false);
    }
    
    public final void setClientPanel() {
        networkPanel.setBorder(BorderFactory.createTitledBorder("Client")); 
        hostField.setEnabled(true);
    }
        
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        modeGroup = new javax.swing.ButtonGroup();
        directoryChooser = new javax.swing.JFileChooser();
        generalPanel = new javax.swing.JPanel();
        modeLabel = new javax.swing.JLabel();
        serverMode = new javax.swing.JRadioButton();
        clientMode = new javax.swing.JRadioButton();
        dirLabel = new javax.swing.JLabel();
        directoryField = new javax.swing.JTextField();
        directoryChooserButton = new javax.swing.JButton();
        networkPanel = new javax.swing.JPanel();
        portLabel = new javax.swing.JLabel();
        portField = new javax.swing.JFormattedTextField();
        hostLabel = new javax.swing.JLabel();
        hostField = new javax.swing.JTextField();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        applyButton = new javax.swing.JButton();

        directoryChooser.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        generalPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("General"));

        modeLabel.setText("Mode :");

        modeGroup.add(serverMode);
        serverMode.setText("Server");
        serverMode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serverModeActionPerformed(evt);
            }
        });

        modeGroup.add(clientMode);
        clientMode.setSelected(true);
        clientMode.setText("Client");
        clientMode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clientModeActionPerformed(evt);
            }
        });

        dirLabel.setText("Directory :");

        directoryField.setText(System.getProperty("user.home")+File.separator+"CloudBox"+File.separator);

        directoryChooserButton.setText("change");
        directoryChooserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                directoryChooserButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout generalPanelLayout = new javax.swing.GroupLayout(generalPanel);
        generalPanel.setLayout(generalPanelLayout);
        generalPanelLayout.setHorizontalGroup(
            generalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(generalPanelLayout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(generalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(generalPanelLayout.createSequentialGroup()
                        .addComponent(modeLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(serverMode)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(clientMode)
                        .addContainerGap())
                    .addGroup(generalPanelLayout.createSequentialGroup()
                        .addComponent(dirLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(directoryField, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(directoryChooserButton))))
        );
        generalPanelLayout.setVerticalGroup(
            generalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(generalPanelLayout.createSequentialGroup()
                .addGroup(generalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modeLabel)
                    .addComponent(serverMode)
                    .addComponent(clientMode))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(generalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dirLabel)
                    .addComponent(directoryField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(directoryChooserButton)))
        );

        networkPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Server"));

        portLabel.setText("port :");

        portField.setText("1337");
        portField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                portFieldActionPerformed(evt);
            }
        });

        hostLabel.setText("Host address:");

        hostField.setText("localhost");
        hostField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hostFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout networkPanelLayout = new javax.swing.GroupLayout(networkPanel);
        networkPanel.setLayout(networkPanelLayout);
        networkPanelLayout.setHorizontalGroup(
            networkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(networkPanelLayout.createSequentialGroup()
                .addGroup(networkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(hostLabel)
                    .addComponent(portLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(networkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(portField, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hostField, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        networkPanelLayout.setVerticalGroup(
            networkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(networkPanelLayout.createSequentialGroup()
                .addGroup(networkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hostLabel)
                    .addComponent(hostField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(networkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(portLabel)
                    .addComponent(portField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        okButton.setText("Ok");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        applyButton.setText("Apply");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(generalPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(networkPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(cancelButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(applyButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(okButton)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(generalPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(networkPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(okButton)
                    .addComponent(applyButton)
                    .addComponent(cancelButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void directoryChooserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_directoryChooserButtonActionPerformed
        File curDir = new File(directoryField.getText());
        
        if(!curDir.exists() || !curDir.isDirectory()) { 
            directoryField.setText( System.getProperty("user.home")+
                    File.separator+ "CloudBox"+ File.separator);
            curDir =  new File( directoryField.getText() );
        }

        directoryChooser.setCurrentDirectory(curDir);
        //directoryChooser.showOpenDialog(this);
        
        if(directoryChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION)
        {
            File selectedFile = directoryChooser.getSelectedFile();
            if(selectedFile.exists() && selectedFile.isDirectory()) {
                directoryField.setText(selectedFile.getAbsolutePath());
            }
        }
    }//GEN-LAST:event_directoryChooserButtonActionPerformed

    private void clientModeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clientModeActionPerformed
        setClientPanel();
    }//GEN-LAST:event_clientModeActionPerformed

    private void serverModeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serverModeActionPerformed
        setServerPanel();
    }//GEN-LAST:event_serverModeActionPerformed

    private void portFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_portFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_portFieldActionPerformed

    private void hostFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hostFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hostFieldActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        
        if(serverMode.isSelected()) {
            m_properties.setProperty("mode", "server"); 
            m_properties.remove("host");
        }
        else {   
            m_properties.setProperty("mode", "client"); 
            m_properties.setProperty("host", hostField.getText());
        }
        
        m_properties.setProperty("port", portField.getText());
        m_properties.setProperty("directory", directoryField.getText());
        
            
        this.dispose();
    }//GEN-LAST:event_okButtonActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton applyButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JRadioButton clientMode;
    private javax.swing.JLabel dirLabel;
    private javax.swing.JFileChooser directoryChooser;
    private javax.swing.JButton directoryChooserButton;
    private javax.swing.JTextField directoryField;
    private javax.swing.JPanel generalPanel;
    private javax.swing.JTextField hostField;
    private javax.swing.JLabel hostLabel;
    private javax.swing.ButtonGroup modeGroup;
    private javax.swing.JLabel modeLabel;
    private javax.swing.JPanel networkPanel;
    private javax.swing.JButton okButton;
    private javax.swing.JFormattedTextField portField;
    private javax.swing.JLabel portLabel;
    private javax.swing.JRadioButton serverMode;
    // End of variables declaration//GEN-END:variables


}
